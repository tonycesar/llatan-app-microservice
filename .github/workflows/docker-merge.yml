name: Deploy to ECR
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: llatan-microservice
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
  deploy:
    name: deploy Image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: multiple command
      uses: appleboy/ssh-action@master
      env:
        DOCKER_IMAGE_NAME: llatan-microservice
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: llatan-microservice
        IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        PORT: 8080
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          docker stop "$DOCKER_IMAGE_NAME" || true
          docker rm "$DOCKER_IMAGE_NAME" || true
          docker rmi -f $(docker images | grep "$DOCKER_IMAGE_NAME" | awk "{print \$3}")  || true
          docker pull "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker run  --name $DOCKER_IMAGE_NAME -p $PORT:8080 -d "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"